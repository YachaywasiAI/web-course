{"version":3,"sources":["components/InputTask.js","components/ListTasks.js","App.js","reportWebVitals.js","index.js"],"names":["InputTask","task","index","deleteTask","className","type","value","id","onClick","event","checked","target","console","log","htmlFor","ListTasks","tasks","addTask","manageTask","deleteAllTasks","deleteFromMockAPI","recoverAllTasks","placeholder","onChange","e","map","item","App","useState","setTasks","setTask","removeTask","a","del","method","headers","body","fetch","response","json","data","getAllTasks","Promise","resolve","reject","then","myTasks","catch","error","useEffect","length","post","JSON","stringify","myTask","saveTask","splice","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45007173.chunk.js","sourcesContent":["import React from 'react'\nimport './inputTask.css'\n// function InputTask({task, manageTask, addTask}) {\n//   return (\n//     <div>\n//       <div className=\"container\">\n//         <div className=\"input-group mb-3\">\n//           <input\n//             type=\"text\"\n//             className=\"form-control shadow-none\"\n//             placeholder=\"Add a new task\"\n//             value={task}\n//             onChange={(e) => {manageTask(e.target.value)}}\n//           ></input>\n//           <div className=\"input-group-append\">\n//             <button\n//               className=\"btn btn-secondary shadow-none\"\n//               type=\"button\"\n//               onClick={addTask}\n//             >Add task</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nfunction InputTask({task, index, deleteTask}) {\n  return (\n    <div>\n      <div className=\"form-check\">\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          value={task}\n          id={task}\n          onClick={(event) => {\n            let checked = event.target.checked;\n            console.log(checked)\n            if (checked) {\n              deleteTask(index)\n            }\n            event.target.checked = false\n          }}\n        />\n        <label\n          className=\"form-check-label\"\n          htmlFor={task}\n        >{task}</label>\n      </div>\n      <hr></hr>\n    </div>\n  );\n}\n\nexport default InputTask\n","import React from 'react'\nimport InputTask from './InputTask'\nimport './listTasks.css'\n\n// function ListTasks({tasks, deleteTask}) {\n//   return (\n//     <div>\n//       <div className=\"container\">\n//         {tasks.map((item, indice) => (\n//           <li>\n//             {item}\n//             <button\n//               onClick={() => {deleteTask(indice)}}\n//             >X</button>\n//           </li>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\nfunction ListTasks({task, tasks, addTask, manageTask, deleteTask, deleteAllTasks, deleteFromMockAPI, recoverAllTasks}) {\n  return (\n    <div className=\"container\">\n      <div className=\"container-div\">\n        <div className=\"input-group mb-3 input-btn\">\n          <input\n            type=\"text\"\n            className=\"form-control shadow-none\"\n            placeholder=\"Type your awesome task here...\"\n            value={task}\n            onChange={(e) => {manageTask(e.target.value)}}\n          ></input>\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-color shadow-none\"\n              type=\"button\"\n              onClick={addTask}\n            >Add task</button>\n          </div>\n        </div>\n        <div className=\"containerClean\">\n          <p>Settings: </p>\n          <p\n            className=\"txt-button\"\n            id=\"delete-button\"\n            onClick={() => deleteAllTasks()}\n          >Delete</p>\n          <p> | </p>\n          <p\n            className=\"txt-button\"\n            id=\"delete-mockapi-button\"\n            onClick={() => deleteFromMockAPI()}\n          >Delete from MockAPI</p>\n          <p> | </p>\n          <p\n            className=\"txt-button\"\n            id=\"recover-button\"\n            onClick={() => recoverAllTasks()}\n          >Recover</p>\n        </div>\n      </div>\n\n      <div className=\"input-tasks\">\n        {tasks.map((item, index) => (\n          <InputTask\n            key={index}\n            task={item}\n            index={index}\n            deleteTask={deleteTask}\n          ></InputTask>\n        ))}\n      </div>\n      <div className=\"readme\">\n        <h3>Readme</h3>\n        <ul className=\"readItem\">\n          <li>DELETE: Delete all tasks from view only</li>\n          <li>DELETE FROM MockAPI: Delete all tasks from MockAPI (bugged when there're many tasks)</li>\n          <li>RECOVER: Recover all tasks from mockAPI</li>\n          <li>All tasks are saved at https://60aab46466f1d000177731f0.mockapi.io/MyTasks</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default ListTasks","/*\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Hello Fucking World!!!\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n*/\n\nimport React, {useState, useEffect} from 'react'\nimport ListTasks from './components/ListTasks'\n\nfunction App() {\n  const [tasks, setTasks] = useState([])\n  const [task, setTask] = useState(\"\")\n\n  const addTask = () => {\n    setTasks([...tasks, task])\n  }\n\n  const manageTask = (task) => {\n    setTask(task)\n  }\n\n  const deleteTask = (index) => {\n    tasks.splice(index, 1)\n    setTasks([...tasks])\n  }\n\n  const deleteAllTasks = () => {\n    setTasks([])\n    //fetch(\"https://60aab46466f1d000177731f0.mockapi.io/MyTasks/1\", {method: 'DELETE'});\n  }\n\n  const removeTask = async (id) => {\n    let del = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: null,\n    }\n    const response = await fetch(`https://60aab46466f1d000177731f0.mockapi.io/MyTasks/${id}`, del)\n    const data = await response.json()\n    return data\n  }\n\n  const deleteFromMockAPI = () => {\n    getAllTasks()\n    .then((myTasks) => {\n      myTasks.map(({id})=>{\n        console.log(id)\n        removeTask(id)\n      })\n    })\n  }\n\n  const getAllTasks = () => {\n    return new Promise((resolve, reject) => {\n      fetch(\"https://60aab46466f1d000177731f0.mockapi.io/MyTasks\")\n      .then(response => response.json())\n      .then(myTasks => resolve(myTasks))\n      .catch(error => reject(error))\n    })\n  }\n\n  const recoverAllTasks = () => {\n    getAllTasks()\n    .then(myTasks => {\n      myTasks.map(({myTask})=>{\n        console.log(myTask)\n        tasks.push(myTask)\n      })\n      setTasks([...tasks])\n    })\n  }\n\n  const saveTask = () => {\n    let post = {\n      method: 'POST',\n      body: JSON.stringify({myTask: tasks[tasks.length-1]}),\n      headers: {'Content-Type':'application/json'}\n    }\n    fetch(\"https://60aab46466f1d000177731f0.mockapi.io/MyTasks\", post)\n    .then(response => response.json())\n    .then(json => console.log(json))\n  }\n\n  useEffect(() => {\n    setTask('')\n    if (task.length)\n      saveTask()\n  }, [tasks])\n\n  return (\n    <div>\n      <ListTasks\n        task={task}\n        tasks={tasks}\n        addTask={addTask}\n        manageTask={manageTask}\n        deleteTask={deleteTask}\n        deleteAllTasks={deleteAllTasks}\n        deleteFromMockAPI={deleteFromMockAPI}\n        recoverAllTasks={recoverAllTasks}\n      ></ListTasks>\n    </div>\n    // <div>\n    //   <InputTask\n    //     task={task}\n    //     manageTask={manageTask}\n    //     addTask={addTask}\n    //   />\n    //   <ListTasks tasks={tasks} deleteTask={deleteTask}></ListTasks>\n    // </div>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}