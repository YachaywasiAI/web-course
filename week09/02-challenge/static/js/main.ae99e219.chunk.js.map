{"version":3,"sources":["components/Card.js","components/Cards.js","App.js","reportWebVitals.js","index.js"],"names":["Card","flowerName","flowerUrl","className","src","alt","Math","floor","random","Cards","flower","flowers","manageFlower","addFlower","htmlFor","type","id","placeholder","value","name","onChange","url","onClick","map","App","useState","setFlowers","setFlower","useEffect","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAqBeA,MAlBf,YAAwC,IAAzBC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,UACzB,OACE,sBAAKC,UAAU,mBAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBACEC,IAAKF,GAAwB,0CAC7BG,IAAI,cACJF,UAAU,mBAGd,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BF,GAA0B,oBACtD,qBAAIE,UAAU,aAAd,qBAAoCG,KAAKC,MAAoB,IAAdD,KAAKE,oB,MCkD7CC,MA7Df,YAA4D,IAA5CC,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,UAC7C,OACE,sBAAKV,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,iCACE,sBAAKA,UAAU,aAAf,UACE,uBAAOW,QAAQ,aAAf,0BACA,uBACEC,KAAK,OACLZ,UAAU,eACVa,GAAG,aACHC,YAAY,6BACZC,MAAOR,EAAOS,KACdA,KAAK,OACLC,SAAUR,OAGd,sBAAKT,UAAU,aAAf,UACE,uBAAOW,QAAQ,YAAf,yBACA,uBACEC,KAAK,OACLZ,UAAU,eACVa,GAAG,YACHC,YAAY,aACZC,MAAOR,EAAOW,IACdF,KAAK,MACLC,SAAUR,OAGd,wBACEG,KAAK,SACLZ,UAAU,uBACVmB,QAAS,WAEPT,KALJ,yBAYJ,qBAAKV,UAAU,MAAf,SACGQ,EAAQY,KAAI,gBAAEJ,EAAF,EAAEA,KAAME,EAAR,EAAQA,IAAR,OACX,qBAAKlB,UAAU,kBAAf,SACE,cAAC,EAAD,CAAMF,WAAYkB,EAAMjB,UAAWmB,EAAnC,gBADoCf,KAAKE,eAK/C,sBAAKL,UAAU,SAAf,UACE,wCACA,qBAAIA,UAAU,WAAd,UACE,gFACA,+FACA,kGACA,kGCSKqB,MApCf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOd,EAAP,KAAgBe,EAAhB,KACA,EAA4BD,mBAAS,CAACN,KAAM,UAAWE,IAAK,YAA5D,mBAAOX,EAAP,KAAeiB,EAAf,KAsBA,OALAC,qBAAU,WACRD,EAAU,CAACR,KAAM,GAAIE,IAAK,OACzB,CAACV,IAIF,8BACE,cAAC,EAAD,CACED,OAAQA,EACRC,QAASA,EACTC,aArBe,SAAAiB,GACnBF,EAAU,2BACLjB,GADI,kBACKmB,EAAEC,OAAOX,KAAOU,EAAEC,OAAOZ,UAoBnCL,UA1BY,WAChBa,EAAW,GAAD,mBAAKf,GAAL,CAAcD,WCxBbqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ae99e219.chunk.js","sourcesContent":["import React from 'react'\nimport './card.css'\n\nfunction Card({flowerName, flowerUrl}) {\n  return (\n    <div className=\"card text-center\">\n      <div className=\"overflow\">\n        <img\n          src={flowerUrl ? flowerUrl : \"https://loremflickr.com/300/300/bouquet\"}\n          alt=\"flower-desc\"\n          className=\"card-img-top\"\n        />\n      </div>\n      <div className=\"card-body\">\n        <h4 className=\"card-title\">{flowerName ? flowerName : \"est qui dolorem\"}</h4>\n        <h6 className=\"card-price\">Price: ${Math.floor(Math.random()*100)}</h6>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport Card from './Card'\nimport './cards.css'\n\nfunction Cards({flower, flowers, manageFlower, addFlower}) {\n  return (\n    <div className=\"container\">\n      <div className=\"container-div\">\n        <form>\n          <div className=\"form-group\">\n            <label htmlFor=\"flowerName\">Flower name:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"flowerName\"\n              placeholder=\"What is the flower's name?\"\n              value={flower.name}\n              name=\"name\"\n              onChange={manageFlower}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"flowerURL\">Flower url:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"flowerURL\"\n              placeholder=\"Insert URL\"\n              value={flower.url}\n              name=\"url\"\n              onChange={manageFlower}\n            />\n          </div>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary mt-2\"\n            onClick={() => {\n              // console.log(flower)\n              addFlower()\n            }}\n          >Upload</button>\n        </form>\n\n      </div>\n\n      <div className=\"row\">\n        {flowers.map(({name, url}) => (\n          <div className=\"col-sm-3 card-c\" key={Math.random()}>\n            <Card flowerName={name} flowerUrl={url}> </Card>\n          </div>\n        ))}\n      </div>\n      <div className=\"readme\">\n        <h3>Readme</h3>\n        <ul className=\"readItem\">\n          <li>Insert a name or a url (but its not necessary)</li>\n          <li>If flower url is blank, upload button generates random picsum</li>\n          <li>Else if flower name is blank, upload button generates lorem name</li>\n          <li>Price is a random generator (its a bugged random seed)</li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default Cards","// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport './App.css'\n\nimport React, {useState, useEffect} from 'react'\nimport Cards from './components/Cards'\n\nfunction App() {\n  const [flowers, setFlowers] = useState([])\n  const [flower, setFlower] = useState({name: \"Default\", url: \"Default\"})\n\n  const addFlower = () => {\n    setFlowers([...flowers, flower])\n  }\n\n  const manageFlower = e => {\n    setFlower({\n      ...flower, [e.target.name]: e.target.value\n    })\n    //console.log({...flower});\n    //console.log(event.target.value);\n    //[event.target.name]: event.target.value;\n    //console.log(flower)\n    //setFlower(flower)\n  }\n\n  useEffect(() => {\n    setFlower({name: \"\", url: \"\"})\n  }, [flowers])\n\n\n  return (\n    <div>\n      <Cards\n        flower={flower}\n        flowers={flowers}\n        manageFlower={manageFlower}\n        addFlower={addFlower}\n      ></Cards>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}